{
  "title": "How to create website3",
  "description": "This is a tutorial on how to create a website",
  "content": "<style>.code-block { background-color: black; color: white; padding: 10px; position: relative; }\n.copy-button { position: absolute; top: 5px; right: 5px; background-color: #444; color: white; border: none; padding: 5px 10px; cursor: pointer; }</style><h1>Simple C Code Example</h1>\n<p>In this example, we'll look at a basic C program that prints &quot;Hello, World!&quot; to the console.</p>\n\n<h2>C Code:</h2>\n<pre class=\"code-block\"><code class=\"language-c\">\n#include &lt;stdio.h&gt;\n\nint main() {\n    printf(&quot;Hello, World!\\n&quot;);\n    return 0;\n}</code><button class=\"copy-button\">Copy</button></pre>\n\n<h2>Explanation:</h2>\n<p>\n  This C code uses the &lt;code&gt;#include &lt;stdio.h&gt;&lt;/code&gt; directive to include the standard input-output library. The &lt;code&gt;main()&lt;/code&gt; function is the entry point of the program. Inside the &lt;code&gt;main()&lt;/code&gt; function, the &lt;code&gt;printf()&lt;/code&gt; function is used to print the &quot;Hello, World!&quot; message to the console. The &lt;code&gt;\\n&lt;/code&gt; represents a newline character, which moves the cursor to the next line after printing the message. Finally, the &lt;code&gt;return 0;&lt;/code&gt; statement indicates that the program has executed successfully.\n</p><script>(function() { var copyButtons = document.querySelectorAll('.copy-button'); copyButtons.forEach(function(copyButton) { copyButton.addEventListener('click', function() { var codeBlock = this.parentElement.querySelector('code'); var textArea = document.createElement('textarea'); textArea.value = codeBlock.textContent; document.body.appendChild(textArea); textArea.select(); document.execCommand('copy'); document.body.removeChild(textArea); this.textContent = 'Code Copied'; var originalText = this; setTimeout(function() { originalText.textContent = 'Copy'; }, 1000); }); }); })();</script>",
  "slug": "blog3"
}
